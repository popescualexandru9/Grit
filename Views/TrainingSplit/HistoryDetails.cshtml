@model  Grit.ViewModels.Training.WorkoutSplitViewModel
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">@Model.TrainingSplitName </h4>
    </div>
    <div class="modal-body">

        <h2>@Model.WorkoutBundle.Workout.Name</h2>
        <div>

            <p style="position:absolute; display:none" id="hiddenWorkoutId">@Model.WorkoutBundle.Workout.Id</p>
            <p class="card-icons">
                <span class="glyphicon glyphicon-calendar"> </span>
                @Html.TextBoxFor(x => x.WorkoutBundle.Workout.Date, "{0:ddd, dd MMM yyyy}", new { @class = "inputHistory datepicker", autocomplete = "off", style = " text-align: center;", id = "workoutDate" })
            </p>


            <span class="card-icons">
                <span class="glyphicon glyphicon-time" > </span>
                <input class="inputHistory" id="timeSpan" value="@Model.WorkoutBundle.Workout.TimeSpan" type="number" min="0" max="180" dir="rtl" /> min
            </span>

            <span class="card-icons">
                <span class="glyphicon glyphicon-fire" style="color:red;"> </span>
                @Model.KcalBurned.low - @Model.KcalBurned.high kcal
            </span>

        </div>
        <br />

        @foreach (var exercise in Model.WorkoutBundle.Workout.Exercises)    
        {
            <div>
                <h4>
                    @Html.TextBox("exerciseName", exercise.Name, new
                   {

                       @class = "changeExerciseName",
                       onclick = "$(this).css({ 'background-color': '#fff', 'color': '#555' });",
                       onblur = "$(this).css({ 'background-color': 'transparent', 'color': '#fff' });",
                   })
               
                    <span class="pull-right onerm">
                        <strong style="color: #66fcf1;"> ~ </strong> 1 RM
                        <span class="tooltiptext"> Estimated One-Rep Maximum </span>
                    </span>
                </h4>
                @for (var i = 0; i < exercise.Sets.Count(); i++)
                {
                    <div style="margin-bottom: 10px;" class="inputs">
                        <span class="setNumber">
                            @(i + 1)
                        </span>
                        <span style="margin-left:7px;">

                            <input class="inputHistory weights" value="@exercise.Sets[i].ActualWeight" type="number" min="0" max="500" step="0.10" dir="rtl" style="width: 75px;" />
                            kg <strong style="color: #66fcf1;"> x </strong>
                            <input class="inputHistory reps" value="@exercise.Sets[i].ActualReps" type="number" min="1" max="100" style=" text-align: left;"/>
                          
                        </span>

                        <span class="pull-right" style="margin-right:2px">
                            @( ((float)exercise.Sets[i].ActualWeight * (1 + (float)exercise.Sets[i].ActualReps / 30)).ToString("0.00")) kg
                        </span>
                        <br />
                    </div>
                }
            </div>

        }


    </div>
    <div class="modal-footer">
        @Html.ActionLink("Delete", "DeleteWorkoutFromHistory", "TrainingSplit",new { id= Model.WorkoutBundle.Workout.Id }, new { @class = "btn btn-danger pull-left" })
        <button type="button" class="btn btn-primary" onclick="sendWeights(this)">Save</button>
    </div>
</div>

<script>

    // I'm using this so that the datepicker can work inside the modal
    $(function () {
        $("body").delegate(".datepicker", "focusin", function () {
            $(this).datepicker();
        });
    });

    $(document).ready(function () {
        $(".changeExerciseName").autosizeInput();
        $(function () {
            $('.datepicker').datepicker({
                dateFormat: 'D, dd MM yy',
                changeMonth: true,
                changeYear: true,
                firstDay: 1,
                showAnim: "fold"
            });
        });
    });
</script>